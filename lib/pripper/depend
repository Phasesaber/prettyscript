
GEN  = $(srcdir)/tools/generate.rb
SRC1 = $(srcdir)/parse.y
SRC2 = $(srcdir)/eventids2.c

MV = mv
CP = cp
RM = rm -f
BISON = bison


.SUFFIXES: .y

src: pscript.c eventids1.c eventids2table.c

pscript.o: pscript.c lex.c eventids1.c eventids2.c eventids2table.c \
	$(hdrdir)/ruby/ruby.h $(arch_hdrdir)/ruby/config.h \
	$(hdrdir)/ruby/defines.h $(hdrdir)/ruby/intern.h \
	$(hdrdir)/ruby/encoding.h $(hdrdir)/missing.h \
	$(srcdir)/node.h $(hdrdir)/oniguruma.h \
	$(hdrdir)/regex.h $(hdrdir)/st.h $(hdrdir)/util.h

.y.c:
	$(BISON) -t -v -oy.tab.c $<
	sed -f $(srcdir)/tools/ytab.sed -e "/^#/s!y\.tab\.c!$@!" y.tab.c > $@
	@$(RM) y.tab.c

all: check
static: check

pscript.y: $(srcdir)/tools/preproc.rb $(srcdir)/parse.y
	$(RUBY) $(srcdir)/tools/preproc.rb $(srcdir)/parse.y --output=$@

check: $(GEN) $(SRC1) $(SRC2)
	$(RUBY) $(GEN) --mode=check --ids1src=$(SRC1) --ids2src=$(SRC2)

eventids1.c: $(srcdir)/tools/generate.rb $(SRC1)
	$(RUBY) $(GEN) --mode=eventids1 --ids1src=$(SRC1) --output=$@

eventids2table.c: $(srcdir)/tools/generate.rb $(SRC2)
	$(RUBY) $(GEN) --mode=eventids2table --ids2src=$(SRC2) --output=$@

lex.c: defs/keywords
	@\
	if cmp -s $(srcdir)/defs/lex.c.src $?; then \
	  set -x; \
	  $(CP) $(srcdir)/lex.c.blt $@; \
	else \
	  set -x; \
	  gperf -C -p -j1 -i 1 -g -o -t -N rb_reserved_word -k1,3,$$ $? > $@.tmp && \
	  $(MV) $@.tmp $@ && \
	  $(CP) $? $(srcdir)/defs/lex.c.src && \
	  $(CP) $@ $(srcdir)/lex.c.blt; \
	fi

# Entries for PrettyScript maintainer

preproc: pscript.E
pscript.E: pscript.c
	$(CC) -E $(CPPFLAGS) $(INCFLAGS) pscript.c | $(RUBY) $(srcdir)/tools/strip.rb > $@
